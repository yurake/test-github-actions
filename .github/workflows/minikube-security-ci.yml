name: Minikube Security CI

on:
  push:
    branches:
      - master
    paths:
      - "application/**"
      - "kubernetes/**"
      - ".github/workflows/minikube-security-ci.yml"
  issues:
    types: [closed]

jobs:
  security-ci:
    runs-on: ubuntu-latest
    steps:
      - name: docker pull
        run: |
          docker pull yurak/nginx:latest
      - name: docker up
        run: |
          docker up yurak/nginx:latest
      - name: checkout
        uses: actions/checkout@v2.6.0
        with:
          repository: yurake/k8s-3tier-webapp
      - name: Kind Cluster
        uses: helm/kind-action@v1.7.0
      - name: kind delete cluster
        run: |
          kind delete cluster
      - name: kind create cluster
        run: |
          cat <<EOF | kind create cluster --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  node-labels: "ingress-ready=true"
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP
          EOF
      - name: Print cluster information
        run: |
          kubectl config view
          kubectl cluster-info
          kubectl get nodes
          kubectl get pods -n kube-system
          helm version
          kubectl version
      - name: apply nginx
        if: always()
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
      - name: wait for set up ingress
        run: |
          kubectl wait --all-namespaces=true --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=10m
      - name: add hosts
        if: always()
        run: echo `minikube ip` k8s.3tier.webapp | sudo tee -a /etc/hosts
      - name: apply minimal service
        if: always()
        run: |
          kubectl apply -f kubernetes/nginx/nginx-ingress.yaml
          kubectl apply -f kubernetes/nginx/nginx-deployment.yaml
          kubectl apply -f kubernetes/nginx/nginx-service.yaml
          sleep 10
      - name: curl ZAP Scan
        if: always()
        run: |
          curl -v http://k8s.3tier.webapp/
      - name: ZAP Scan
        if: always()
        uses: zaproxy/action-baseline@v0.8.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: "http://k8s.3tier.webapp/"
      - name: check status
        if: always()
        run: |
          kubectl get po --all-namespaces=true
          kubectl get nodes
          kubectl get pv
          kubectl get pvc
          kubectl get all
          kubectl get all -n monitoring
          kubectl get ingress
          df -h /
      - name: check get ingress
        if: always()
        run: |
          kubectl get ingress
      - name: check describe ingress
        if: always()
        run: |
          kubectl describe ingress nginx
      - name: check get nginx
        if: always()
        run: |
          kubectl get nginx
      - name: check describe nginx
        if: always()
        run: |
          kubectl describe po nginx
